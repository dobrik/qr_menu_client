name: CI/CD for Menu Frontend

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{ github.run_number }}
      IMAGE_NAME: ${{ secrets.REGISTRY_URL }}/menu_frontend:${{ github.run_number }}
      LATEST_IMAGE: ${{ secrets.REGISTRY_URL }}/menu_frontend:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Docker login to local registry
        run: |
          echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login ${{ secrets.REGISTRY_URL }} --username ${{ secrets.REGISTRY_USERNAME }} --password-stdin

      - name: Build and push Docker image
        run: |
          docker build --no-cache \
            --build-arg NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }} \
            --build-arg NEXT_PUBLIC_S3_URL=${{ secrets.NEXT_PUBLIC_S3_URL }} \
            -t $IMAGE_NAME -t $LATEST_IMAGE -f Dockerfile .
          docker push $IMAGE_NAME
          docker push $LATEST_IMAGE

      - name: Deploy to server
        uses: appleboy/ssh-action@v0.1.9
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            REGISTRY_URL="registry.local:5000"
            BUILD_NUMBER="${{ github.run_number }}"
            IMAGE_NAME="$REGISTRY_URL/menu_frontend:$BUILD_NUMBER"
            LATEST_IMAGE="$REGISTRY_URL/menu_frontend:latest"

            echo "${{ secrets.REGISTRY_PASSWORD }}" | docker login $REGISTRY_URL --username ${{ secrets.REGISTRY_USERNAME }} --password-stdin

            docker pull $IMAGE_NAME

            cat > /home/dobrik/apps/menu/frontend/docker-compose.yml <<EOF
            version: '3.7'
            services:
              menu_frontend:
                image: $IMAGE_NAME
                container_name: menu_frontend
                restart: always
                ports:
                  - "3000:3000"
                environment:
                  - NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
                  - NEXT_PUBLIC_S3_URL=${{ secrets.NEXT_PUBLIC_S3_URL }}
                healthcheck:
                  test: ["CMD", "curl", "-f", "http://localhost:3000"]
                  interval: 10s
                  timeout: 5s
                  retries: 5
                networks:
                  - default
                  - shared_network
            networks:
              shared_network:
                name: shared_network
                external: true
            EOF

            cd /home/dobrik/apps/menu/frontend && docker-compose up -d

            echo "Pausing for 30 seconds before healthcheck..."
            sleep 30

            HEALTHCHECK_URL="http://localhost:3000"
            HEALTH_STATUS=$(curl -s -o /dev/null -w "%{http_code}" $HEALTHCHECK_URL)

            if [ "$HEALTH_STATUS" -eq 200 ]; then
              echo "New version is healthy."
              docker tag $IMAGE_NAME $LATEST_IMAGE
              docker rmi $(docker images -f "dangling=true" -q)
              docker images --format '{{.Repository}}:{{.Tag}} {{.ID}}' | grep 'menu_frontend:' | awk '{print $2}' | tail -n +3 | xargs -r docker rmi || true
            else
              echo "Healthcheck failed. Rolling back."
              docker-compose down
            fi
